// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Net21_Labb3_API.Data;

#nullable disable

namespace Net21Labb3API.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20221218025951_Update")]
    partial class Update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Net21_Labb3_API.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Cycling"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fishing"
                        });
                });

            modelBuilder.Entity("Net21_Labb3_API.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "James Brown"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tom Cruise"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Peter Pan"
                        });
                });

            modelBuilder.Entity("Net21_Labb3_API.Models.Website", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripton")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.ToTable("Websites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InterestId = 3,
                            Url = "https://www.etsy.com/market/fishing_lovers"
                        },
                        new
                        {
                            Id = 2,
                            InterestId = 2,
                            Url = "https://www.topendsports.com/sport/cycling-sports.htm"
                        },
                        new
                        {
                            Id = 3,
                            InterestId = 1,
                            Url = "https://www.swimmingworldmagazine.com/news/ranking-the-best-mens-swimmers-in-the-world-from-1-25-as-olympic-year-arrives/"
                        },
                        new
                        {
                            Id = 4,
                            InterestId = 1,
                            Url = "https://www.waterworksswim.com/swim-library/detail/2014-09-05-top-10-swimmers-of-all-time-post-378"
                        });
                });

            modelBuilder.Entity("Net21_Labb3_API.Models.Interest", b =>
                {
                    b.HasOne("Net21_Labb3_API.Models.Person", "Person")
                        .WithMany("interests")
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Net21_Labb3_API.Models.Website", b =>
                {
                    b.HasOne("Net21_Labb3_API.Models.Interest", "Interest")
                        .WithMany("websites")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");
                });

            modelBuilder.Entity("Net21_Labb3_API.Models.Interest", b =>
                {
                    b.Navigation("websites");
                });

            modelBuilder.Entity("Net21_Labb3_API.Models.Person", b =>
                {
                    b.Navigation("interests");
                });
#pragma warning restore 612, 618
        }
    }
}
